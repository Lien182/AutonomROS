#
# General settings
#
#   TargetBoard - board to run you application on
#   TargetOS    - operating system to use
#   SystemClock - clock of the ReconOS system
#   CFlags      - additional flags for compilation
#   LdFlags     - additional flags for linking
#
[General]
Name = CarControl
TargetBoard = zcu104,0
TargetPart = xczu7ev-ffvc1156-2-e
ReferenceDesign = timer_hwpr
TargetOS = linux64
#TargetOS = linux_x86
TargetXil = vivado,2021.2
TargetHls = vivado,2021.2
SystemClock = System
CFlags = -g -I $(RECONOS)/linux/tools/timer -I ../ -O3 -Wno-deprecated -Wno-unused-variable -Wno-deprecated-declarations -Wno-sign-compare -Wno-unused-label `pkg-config opencv4 --cflags --libs`
LdFlags = -lm -lstdc++ `pkg-config --cflags --libs opencv4` 
ROS2Distribution = galactic
CPUArchitecture = arm64

#TargetBoardAddress  = 192.168.188.54
#TargetBoardUser     = root
#TargetBoardPassword = xilinx    



#
# Clock definition
#
#   ClockSource - static or reconfigurable clock
#   ClockFreq   - initial clock frequency
#
[Clock@System]
ClockSource = static
ClockFreq = 100000000

[Clock@Threads]
ClockSource = dynamic
ClockFreq = 120000000


#
# Specification of hardware thread slots
#
#   Id               - id of the slot
#   Clock            - clock connected to the slot
#

[HwSlot@SlotFixed(0:1)]
Id = 0
Clock = Threads
Reconfigurable = false


# Resource definition
#
#   <Name> - type,<optional arguments>
#


[ResourceGroup@RLanePlanner]
camera_image_msg = rosmsg, sensor_msgs ,msg ,Image
output_image_msg = rosmsg, sensor_msgs ,msg ,Image
node_1 = rosnode, "LanePlanner"
camera_image_sub = rossub, node_1, camera_image_msg, "/image", 10000
output_image_pub  = rospub, node_1, output_image_msg, "/camera/bird_view"

[ResourceGroup@RPolyFit]
bird_image_msg = rosmsg, sensor_msgs ,msg ,Image
poly_image_msg = rosmsg, sensor_msgs, msg, Point_Cloud2
node_1 = rosnode, "PolyFit"
bird_image_sub = rossub, node_1, bird_image_msg, "/camera/bird_view", 10000
poly_image_pub  = rospub, node_1, poly_image_msg, "/camera/polyfit"


#
# Specification of thread types
#
#   Slot          - slot to implement the hardware thread in
#   Source        - source if the hardware thread
#   ResourceGroup - resources of the hardware thread
#

[ReconosThread@LanePlanner]
Slot = SlotFixed(0)
HwSource = hls
SwSource = c
ResourceGroup = RLanePlanner

[ReconosThread@PolyFit]
Slot = SlotFixed(1)
HwSource = hls
SwSource = c
ResourceGroup = RPolyFit



